{
	"name": "Copy_or_Move_files_from_ADLS_to_Blobstorage",
	"properties": {
		"description": "This is a common ADF pipeline that can be used to copy/move the files  between the ADLS and local blob storage.\n\n*wild card is supported.",
		"activities": [
			{
				"name": "Read_Env_File",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "JsonSource",
						"storeSettings": {
							"type": "AzureBlobStorageReadSettings",
							"recursive": false,
							"enablePartitionDiscovery": false
						},
						"formatSettings": {
							"type": "JsonReadSettings"
						}
					},
					"dataset": {
						"referenceName": "Json",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Email_Notify_Success",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "If Condition1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "EmailNotification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"DataFactoryName": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						},
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"Message": {
							"value": "@concat('Pipeline execution is successful')",
							"type": "Expression"
						},
						"EmailTo": {
							"value": "@activity('Read_Env_File').output.firstRow.succ_email_to",
							"type": "Expression"
						},
						"SourceFile": {
							"value": "@pipeline().parameters.Filename",
							"type": "Expression"
						},
						"Status": "Success"
					}
				}
			},
			{
				"name": "Email_Notify_Failure_02",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "If Condition1",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "EmailNotification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"DataFactoryName": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						},
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"Message": {
							"value": "@concat('The pipeline has encountered an error. Please check the logs for more details. ')",
							"type": "Expression"
						},
						"EmailTo": {
							"value": "@activity('Read_Env_File').output.firstRow.fail_email_to",
							"type": "Expression"
						},
						"SourceFile": {
							"value": "@pipeline().parameters.Filename",
							"type": "Expression"
						},
						"Status": "Fail"
					}
				}
			},
			{
				"name": "Email_Notify_Failure_01",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "Read_Env_File",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "EmailNotification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"DataFactoryName": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						},
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"Message": {
							"value": "@concat('Could not find or unable to read job params json file. Please check the logs for more details.')",
							"type": "Expression"
						},
						"EmailTo": {
							"value": "DL_BA_Finance@aa.com",
							"type": "Expression"
						},
						"SourceFile": {
							"value": "@pipeline().parameters.Filename",
							"type": "Expression"
						},
						"Status": "Fail"
					}
				}
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Read_Env_File",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(pipeline().parameters.Move_Ind,'Y')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Copy_Files1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.01:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"maxConcurrentConnections": 1,
										"recursive": false,
										"wildcardFileName": {
											"value": "@concat(pipeline().parameters.Filename,'*')",
											"type": "Expression"
										},
										"deleteFilesAfterCompletion": false
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									}
								},
								"enableStaging": false,
								"validateDataConsistency": false
							},
							"inputs": [
								{
									"referenceName": "ADLS_generic",
									"type": "DatasetReference",
									"parameters": {
										"complete_path": {
											"value": "@pipeline().parameters.From_Folder",
											"type": "Expression"
										},
										"adls_storage_cntner": {
											"value": "@activity('Read_Env_File').output.firstRow.adls_storage_cntner",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Blob_Binary_Generic",
									"type": "DatasetReference",
									"parameters": {
										"ContainerName": {
											"value": "@pipeline().parameters.To_Folder",
											"type": "Expression"
										}
									}
								}
							]
						}
					],
					"ifTrueActivities": [
						{
							"name": "Copy_Files",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.01:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "BinarySource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"maxConcurrentConnections": 1,
										"recursive": false,
										"wildcardFileName": {
											"value": "@concat(pipeline().parameters.Filename,'*')",
											"type": "Expression"
										},
										"deleteFilesAfterCompletion": false
									},
									"formatSettings": {
										"type": "BinaryReadSettings"
									}
								},
								"sink": {
									"type": "BinarySink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									}
								},
								"enableStaging": false,
								"validateDataConsistency": false
							},
							"inputs": [
								{
									"referenceName": "ADLS_generic",
									"type": "DatasetReference",
									"parameters": {
										"complete_path": {
											"value": "@pipeline().parameters.From_Folder",
											"type": "Expression"
										},
										"adls_storage_cntner": {
											"value": "@activity('Read_Env_File').output.firstRow.adls_storage_cntner",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "Blob_Binary_Generic",
									"type": "DatasetReference",
									"parameters": {
										"ContainerName": {
											"value": "@pipeline().parameters.To_Folder",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "DeleteFromSource",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Copy_Files",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ADLS_generic",
									"type": "DatasetReference",
									"parameters": {
										"complete_path": {
											"value": "@pipeline().parameters.From_Folder",
											"type": "Expression"
										},
										"adls_storage_cntner": {
											"value": "@activity('Read_Env_File').output.firstRow.adls_storage_cntner",
											"type": "Expression"
										}
									}
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorage_ls",
										"type": "LinkedServiceReference"
									},
									"path": "log"
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFileName": {
										"value": "@{concat(pipeline().parameters.Filename,'*')}",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"Filename": {
				"type": "string",
				"defaultValue": "NA"
			},
			"From_Folder": {
				"type": "string",
				"defaultValue": "dev/raw/"
			},
			"To_Folder": {
				"type": "string",
				"defaultValue": "landing"
			},
			"Move_Ind": {
				"type": "string",
				"defaultValue": "N"
			}
		},
		"folder": {
			"name": "DevOps"
		},
		"annotations": [],
		"lastPublishTime": "2022-06-18T16:21:12Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}