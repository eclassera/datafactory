{
	"name": "ADLS Data Cleanup",
	"properties": {
		"activities": [
			{
				"name": "DeleteFromBlobWork",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Is_Raw_Non-PII",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Blob_work",
						"type": "DatasetReference"
					},
					"logStorageSettings": {
						"linkedServiceName": {
							"referenceName": "AzureBlobStorage_ls",
							"type": "LinkedServiceReference"
						},
						"path": "log"
					},
					"enableLogging": true,
					"storeSettings": {
						"type": "AzureBlobStorageReadSettings",
						"recursive": false,
						"wildcardFileName": {
							"value": "@{pipeline().parameters.wildcard_file_path_work}",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "Email_Notify_Failure_BlobWork",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "DeleteFromBlobWork",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "EmailNotification",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"DataFactoryName": {
							"value": "@pipeline().DataFactory",
							"type": "Expression"
						},
						"PipelineName": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"Message": {
							"value": "@concat('The pipeline has encountered an error. Please check the logs for more details. ')",
							"type": "Expression"
						},
						"EmailTo": {
							"value": "@pipeline().parameters.EmailTo",
							"type": "Expression"
						},
						"SourceFile": {
							"value": "@pipeline().parameters.SourceFile",
							"type": "Expression"
						},
						"Status": "Fail"
					}
				}
			},
			{
				"name": "Input_File_Prefix",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Is_Work_Non-PII",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "input_file_prefix",
					"value": {
						"value": "@substring(pipeline().parameters.SourceFile,0,lastindexof(pipeline().parameters.SourceFile,'_'))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "File_Name",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Input_File_Prefix",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "Filename",
					"value": {
						"value": "@pipeline().parameters.SourceFile",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Source_Data_Dt",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "File_Name",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "sourceDataDt",
					"value": {
						"value": "@substring(pipeline().parameters.SourceFile,add(lastindexof(pipeline().parameters.SourceFile,'_'),1),8)",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Is_Work_SPII",
				"type": "IfCondition",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@if(equals(pipeline().parameters.adls_storage_cntner,'rvact-spii'), 'true', 'false')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "DeleteFromWork_spii",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ADLS_work_spii",
									"type": "DatasetReference",
									"parameters": {
										"env": {
											"value": "@pipeline().parameters.env",
											"type": "Expression"
										},
										"adls_storage_cntner_spii": {
											"value": "@pipeline().parameters.adls_storage_cntner",
											"type": "Expression"
										}
									}
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorage_ls",
										"type": "LinkedServiceReference"
									},
									"path": "log"
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFileName": {
										"value": "@{pipeline().parameters.wildcard_file_path_work}",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Email_Notify_Failure_Work_spii",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "DeleteFromWork_spii",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "EmailNotification",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"DataFactoryName": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"PipelineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"Message": {
										"value": "@concat('The pipeline has encountered an error. Please check the logs for more details. ')",
										"type": "Expression"
									},
									"EmailTo": {
										"value": "@pipeline().parameters.EmailTo",
										"type": "Expression"
									},
									"SourceFile": {
										"value": "@pipeline().parameters.SourceFile",
										"type": "Expression"
									},
									"Status": "Fail"
								}
							}
						}
					]
				}
			},
			{
				"name": "Is_Work_PII",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Is_Work_SPII",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@if(equals(pipeline().parameters.adls_storage_cntner,'rvact-pii'), 'true', 'false')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "DeleteFromWork_pii",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ADLS_work_pii",
									"type": "DatasetReference",
									"parameters": {
										"env": {
											"value": "@pipeline().parameters.env",
											"type": "Expression"
										},
										"adls_storage_cntner_pii": {
											"value": "@pipeline().parameters.adls_storage_cntner",
											"type": "Expression"
										}
									}
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorage_ls",
										"type": "LinkedServiceReference"
									},
									"path": "log"
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFileName": {
										"value": "@{pipeline().parameters.wildcard_file_path_work}",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Email_Notify_Failure_Work_pii",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "DeleteFromWork_pii",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "EmailNotification",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"DataFactoryName": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"PipelineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"Message": {
										"value": "@concat('The pipeline has encountered an error. Please check the logs for more details. ')",
										"type": "Expression"
									},
									"EmailTo": {
										"value": "@pipeline().parameters.EmailTo",
										"type": "Expression"
									},
									"SourceFile": {
										"value": "@pipeline().parameters.SourceFile",
										"type": "Expression"
									},
									"Status": "Fail"
								}
							}
						}
					]
				}
			},
			{
				"name": "Is_Work_Non-PII",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Is_Work_PII",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@if(equals(pipeline().parameters.adls_storage_cntner,'rvact'), 'true', 'false')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "DeleteFromWork",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ADLS_work",
									"type": "DatasetReference",
									"parameters": {
										"env": {
											"value": "@pipeline().parameters.env",
											"type": "Expression"
										},
										"adls_storage_cntner": {
											"value": "@pipeline().parameters.adls_storage_cntner",
											"type": "Expression"
										}
									}
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorage_ls",
										"type": "LinkedServiceReference"
									},
									"path": "log"
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFileName": {
										"value": "@{pipeline().parameters.wildcard_file_path_work}",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Email_Notify_Failure_Work",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "DeleteFromWork",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "EmailNotification",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"DataFactoryName": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"PipelineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"Message": {
										"value": "@concat('The pipeline has encountered an error. Please check the logs for more details. ')",
										"type": "Expression"
									},
									"EmailTo": {
										"value": "@pipeline().parameters.EmailTo",
										"type": "Expression"
									},
									"SourceFile": {
										"value": "@pipeline().parameters.SourceFile",
										"type": "Expression"
									},
									"Status": "Fail"
								}
							}
						}
					]
				}
			},
			{
				"name": "Is_Raw_SPII",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Source_Data_Dt",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@if(equals(pipeline().parameters.adls_storage_cntner,'rvact-spii'), 'true', 'false')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "DeleteFromRaw_spii",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ADLS_raw_spii",
									"type": "DatasetReference",
									"parameters": {
										"env": {
											"value": "@pipeline().parameters.env",
											"type": "Expression"
										},
										"adls_storage_cntner_spii": {
											"value": "@pipeline().parameters.adls_storage_cntner",
											"type": "Expression"
										},
										"input_file_prefix": {
											"value": "@variables('input_file_prefix')",
											"type": "Expression"
										},
										"Filename": {
											"value": "@variables('Filename')",
											"type": "Expression"
										},
										"sourceDataDt": {
											"value": "@variables('sourceDataDt')",
											"type": "Expression"
										}
									}
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorage_ls",
										"type": "LinkedServiceReference"
									},
									"path": "log"
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFileName": {
										"value": "@{pipeline().parameters.SourceFile}",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Email_Notify_Failure_Raw_spii",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "DeleteFromRaw_spii",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "EmailNotification",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"DataFactoryName": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"PipelineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"Message": {
										"value": "@concat('The pipeline has encountered an error. Please check the logs for more details. ')",
										"type": "Expression"
									},
									"EmailTo": {
										"value": "@pipeline().parameters.EmailTo",
										"type": "Expression"
									},
									"SourceFile": {
										"value": "@pipeline().parameters.SourceFile",
										"type": "Expression"
									},
									"Status": "Fail"
								}
							}
						}
					]
				}
			},
			{
				"name": "Is_Raw_PII",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Is_Raw_SPII",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@if(equals(pipeline().parameters.adls_storage_cntner,'rvact-pii'), 'true', 'false')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "DeleteFromRaw_pii",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ADLS_raw_pii",
									"type": "DatasetReference",
									"parameters": {
										"env": {
											"value": "@pipeline().parameters.env",
											"type": "Expression"
										},
										"adls_storage_cntner_pii": {
											"value": "@pipeline().parameters.adls_storage_cntner",
											"type": "Expression"
										},
										"input_file_prefix": {
											"value": "@variables('input_file_prefix')",
											"type": "Expression"
										},
										"Filename": {
											"value": "@variables('Filename')",
											"type": "Expression"
										},
										"sourceDataDt": {
											"value": "@variables('sourceDataDt')",
											"type": "Expression"
										}
									}
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorage_ls",
										"type": "LinkedServiceReference"
									},
									"path": "log"
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFileName": {
										"value": "@{pipeline().parameters.SourceFile}",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Email_Notify_Failure_Raw_pii",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "DeleteFromRaw_pii",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "EmailNotification",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"DataFactoryName": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"PipelineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"Message": {
										"value": "@concat('The pipeline has encountered an error. Please check the logs for more details. ')",
										"type": "Expression"
									},
									"EmailTo": {
										"value": "@pipeline().parameters.EmailTo",
										"type": "Expression"
									},
									"SourceFile": {
										"value": "@pipeline().parameters.SourceFile",
										"type": "Expression"
									},
									"Status": "Fail"
								}
							}
						}
					]
				}
			},
			{
				"name": "Is_Raw_Non-PII",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Is_Raw_PII",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@if(equals(pipeline().parameters.adls_storage_cntner,'rvact'), 'true', 'false')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "DeleteFromRaw",
							"type": "Delete",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ADLS_raw",
									"type": "DatasetReference",
									"parameters": {
										"env": {
											"value": "@pipeline().parameters.env",
											"type": "Expression"
										},
										"adls_storage_cntner": {
											"value": "@pipeline().parameters.adls_storage_cntner",
											"type": "Expression"
										},
										"input_file_prefix": {
											"value": "@variables('input_file_prefix')",
											"type": "Expression"
										},
										"Filename": {
											"value": "@variables('Filename')",
											"type": "Expression"
										},
										"sourceDataDt": {
											"value": "@variables('sourceDataDt')",
											"type": "Expression"
										}
									}
								},
								"logStorageSettings": {
									"linkedServiceName": {
										"referenceName": "AzureBlobStorage_ls",
										"type": "LinkedServiceReference"
									},
									"path": "log"
								},
								"enableLogging": true,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"wildcardFileName": {
										"value": "@{pipeline().parameters.SourceFile}",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "Email_Notify_Failure_Raw",
							"type": "ExecutePipeline",
							"dependsOn": [
								{
									"activity": "DeleteFromRaw",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "EmailNotification",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"DataFactoryName": {
										"value": "@pipeline().DataFactory",
										"type": "Expression"
									},
									"PipelineName": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"Message": {
										"value": "@concat('The pipeline has encountered an error. Please check the logs for more details. ')",
										"type": "Expression"
									},
									"EmailTo": {
										"value": "@pipeline().parameters.EmailTo",
										"type": "Expression"
									},
									"SourceFile": {
										"value": "@pipeline().parameters.SourceFile",
										"type": "Expression"
									},
									"Status": "Fail"
								}
							}
						}
					]
				}
			}
		],
		"parameters": {
			"env": {
				"type": "string"
			},
			"adls_storage_cntner": {
				"type": "string"
			},
			"wildcard_file_path_work": {
				"type": "string"
			},
			"wildcard_file_path_raw": {
				"type": "string"
			},
			"EmailTo": {
				"type": "string"
			},
			"SourceFile": {
				"type": "string"
			}
		},
		"variables": {
			"input_file_prefix": {
				"type": "String"
			},
			"Filename": {
				"type": "String"
			},
			"sourceDataDt": {
				"type": "String"
			}
		},
		"folder": {
			"name": "DevOps"
		},
		"annotations": [],
		"lastPublishTime": "2022-06-18T15:45:47Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}